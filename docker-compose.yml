version: '3.7'

services:
  #Jellyfin (Media Server)
  jellyfin:
    image: jellyfin/jellyfin
    container_name: "jellyfin"
    volumes:
      - ./jellyfin-config:/config
      - ./jellyfin-cache:/cache
      - ./media-storage/Movies:/movies
      - ./media-storage/Episodes:/episodes
    ports:
      - "8096:8096"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.bolt`)"

  # Jackett
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    ports:
      - 9117:9117
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./jackett-config:/config
      - ./media-storage/Downloads/completed:/downloads
      - /etc/localtime:/etc/localtime:ro
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.bolt`)"

  # Delgue with OpenVPN
  deluge:
    image: sgtsquiggs/deluge-openvpn
    container_name: "delgue"
    env_file:
      - .vpn
    volumes:
      - ./delgue-config:/config
      - ./media-storage/Downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8112:8112
      - 8118:8118
      - 58846:58846
      - 58946:58946
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
      - TZ=Pacific/Auckland
      - OPENVPN_PROVIDER=NORDVPN
      - OPENVPN_CONFIG=nz25.nordvpn.com.tcp
      - LOCAL_NETWORK=10.0.0.0/24
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.rule=Host(`deluge.bolt`)"

  #Sonarr
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: always
    ports:
      - 8989:8989
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - ./sonarr-config:/config
      - ./media-storage/Downloads/completed:/downloads/completed
      - ./media-storage/Episodes:/episodes
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.bolt`)"
  #Radarr
  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: always
    ports:
      - 7878:7878
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - ./radarr-config:/config
      - ./media-storage/Downloads/completed:/downloads/completed
      - ./media-storage/Movies:/movies
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.bolt`)"

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: always
    ports:
      - 3579:3579
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./ombi-config:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=Host(`ombi.bolt`)"
    depends_on:
      - radarr
      - sonarr

  # Portainer (Container Manager via Browser)
  portainer:
    image: portainer/portainer
    restart: always
    container_name: "portainer-app"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    ports:
      - "9000:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.bolt`)"

  watchtower:
    image: v2tec/watchtower
    restart: always
    container_name: "portainer-watchtower"
    command: --cleanup portainer-app portainer-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  #Traefik reverse proxy e.g. jellyfin.bolt -> localhost:8096
  traefik:
    image: traefik:v2.2
    restart: always
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "9090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro